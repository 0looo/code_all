Package
    install
        명령어
            install.packages("패키지명")
        
        패널이용하기
            Packages - Install - "패키지명"입력

    설치확인
        명령어
            installed.packages()
            
        패널
            Pakcages - 검색
        
    제거
        remove.packages('패키지명')
        
    로드
        libary(패키지명)
            : 패키지 미설치시 error
        
        require(패키지명)
            : 패키지 미설치시 경고

index(python과 차이점)
    vector
        # 1부터 시작함
        # 00:endIdx 에서 endIdx까지 출력함
        # [-Idx] => Idx를 제외한 나머지 출력
    
    matrix
        # MX[행,렬]
        # slicing방법은 1부터 시작과 - 제외하고 동일함
        
Strings
    chr     : 문자열 형태
    int     : 숫자
    num     : 숫자
    Factor  : 명목형 변수
    Posixct : 시간 변수
    Tseries : 시계열 변수
    
    형태 확인
        chr(vec or maxrix)
            : 내부 str형태 및 요소값 출력

        is.#(확인할 요소)
            # : integer, numeric, factor, character
            : str가 맞는지 여부 

    형태 변환
        as.#(변환할 요소)
            # : integer, numeric, factor, character
            : #에 해당하는 형태로 변환(원본 변경x ==> 별도 변수설정필요)

변수선언
    a < - 2
    a = 2
        * 두가지 모두 가능

주석처리
    한줄주석
        # 원하는 내용작성
        
    여러줄 주석
        1. ctrl + shift + c  ## R Studio 기능, 역으로도 가능
        2. 쓰지않는 변수 활용(꼼수)

vector(백터)
    생성
        c(#)
            : column형태로 만들어짐(세로로) / console에 출력으론 가로로 나옴
            # 넣고싶은 요소를 , 기준으로 넣을 수 있음
            # int1 : int2  => int1부터 +1씩해서 넣어줌 (int2보다 같거나 작은수까지) , 소수도 가능
            # col명 = 조건 or 요소, col명 = 조건 or 요소  => 백터생성시 column명 설정 가능

        seq(#)
            : 원하는 범위의 숫자를 넣기 위한 기능
            # to = end number
            # from = start number(default = 1)
            # by = 증가하는 크기(default = 1)

        rep(#)
            : 원하는 요소를 반복해서 넣을때 사용
            # 반복할 값, 반복횟수(default = 1)
            ## 반복할값의 요소만큼 반복횟수를 별도로 백터로 주어서 사용가능
            
    추가
        vec1 = c(vec1, 추가할요소 or vec)
            : vec1뒤에 요소 or vec를 추가

matrix, dataframe
    생성
        matrix(data = , nrow = 열갯수, ncol = col갯수)
            : data를 nrow or ncol에 맞춰서 matrix 생성

        data.frame(vec1, vec2..)
            : 각 vec를 col으로 하는 dataframe 생성
                ## len이 다를 경우 가장 많은 vec에 맞춰서 반복실행  //  큰값과 특정 vce요소갯수가 서로소일경우 error
            ## col명 설정
                Col명 = vec1, ...
                    : col명 설정 가능

DATE(시간, 날짜)
    # 공통사항
        요일
            %a : 월,화,수 ...
            %A : 월요일, 화요일 ...
            %u : 1~7 사이값 출력, 1:월요일, 2:화요일 ...
            %w : 0~6 사이값 출력, 0:일요일
        일
            %d : 09, 11, 12 ...
        월
            %b : 1, 2, ...
            %B : 1월, 2월...
        년
            %y : 12,13,14...
            %Y : 2012, 2013 ...
        시간
            %H : 11, 23, 00...
            %l(소문자L) : 11, 11, 12..
        
        분
            %M : 23, 45 ...
        
        초
            %S : 06, 11, 15..
        
        오전 / 오후
            %p : AM, PM
        
        세기
            %C : 세기(ex 20세기)    

    Date        
        as.Date(str, format = "#")
                # ex) %Y-%m-%d
            : str을 date형식으로 변경
                #제한) 년,월,일만 사용가능
    Posixct
        as.POSIXct(str, format="#")
                # ex)%Y-%m-%d %H:%M:%S
            : str을 POSIXct로 변경
        
        format(pos, %)
            : %에 해당하는 pos의 값을 출력(%은 공통사항 참조)
    
    lubridate package(추가정리필요)

크기출력 (length, dim)
    length(vec1)
        : vector의 요소갯수 출력
    
    dim(matrix)
        : matrix의 크기 출력

요소분포확인
    summary(vec or max)
        : str = int or num ==> 최소값, 1사분기, 중앙값, 평균, 3사분기, 최대값 출력
        : str = factor ==> level 갯수와 요소 출력
        : str = character ==> chr()와 동일하게 출력(요소 출력)

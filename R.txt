폴더(dir)
    생성
        dir.create('폴더경로')
        
     폴더의 파일목록
        list.files('폴더경로')
        

변수선언
    a < - 2
    a = 2
        * 두가지 모두 가능

Console
    내용제거
        cat("\014")

    내용 output
        capture.output(code, #)
            : code에 출력되는 내용 저장
            #
                data = Console에 출력하는 함수 작성
                file = '파일경로/저장할파일명'
                sep = 구분자
                append = FALSE(default = 파일이 같을 경우 새로작성) / TRUE( = 이어서 작성)
                
        sink('파일경로/파일명',#)
            : Console에 나와있는 모든 내용저장
                # append = FALSE(default = 파일이 같을 경우 새로작성) / TRUE( = 이어서 작성)
                
               
Global Evnirnment
    내용제거
        rm(list=ls())

주석처리
    한줄주석
        # 원하는 내용작성
        
    여러줄 주석
        1. ctrl + shift + c  ## R Studio 기능, 역으로도 가능
        2. 쓰지않는 변수 활용(꼼수)

시스템설정 (Sys)
    Sys.setlocale(category = , locale = )
        : 기본 국가설정관련 함수

    작업공간
        getwd()
            : 현제 작업공간 출력

        setwd('디렉토리')
            : 디렉토리로 작업공간 설정

Package
    install
        명령어
            install.packages("패키지명")
        
        패널이용하기
            Packages - Install - "패키지명"입력

    설치확인
        명령어
            installed.packages()
            
        패널
            Pakcages - 검색
        
    제거
        remove.packages('패키지명')
        
    로드
        libary(패키지명)
            : 패키지 미설치시 error
        
        require(패키지명)
            : 패키지 미설치시 경고

index(python과 차이점)
    vector
        # 1부터 시작함
        # 00:endIdx 에서 endIdx까지 출력함
        # [-Idx] => Idx를 제외한 나머지 출력
    
    matrix
        # MX[행,렬]
        # slicing방법은 1부터 시작과 - 제외하고 동일함
        
Strings
    chr     : 문자열 형태
    int     : 숫자
    num     : 숫자
    Factor  : 명목형 변수
    Posixct : 시간 변수
    Tseries : 시계열 변수
    
    형태 확인
        mode(변수)
            : 변수 저장된 값의 type출력

        class(변수)
            : 변수 type 출력

        chr(vec or maxrix)
            : 내부 str형태 및 요소값 출력

        is.#(확인할 요소)
            # : integer, numeric, factor, character
            : str가 맞는지 여부 

    형태 변환
        as.#(변환할 요소)
            # : integer, numeric, factor, character
            : #에 해당하는 형태로 변환(원본 변경x ==> 별도 변수설정필요)

String(chr)
    문자갯수출력
        nchar(string)

    stiptime(변수, format = '')
        : str to POSIXlt
        
    문자 바꾸기(R Studio 기능)
        ctrl + f 
            : 주소 등 \ 변경시 

         gsub(#,##, 데이터)
                : 데이터 중 #를 ##로 변경
            
    문자 합차기
        paste(#)
            : vector to string
                * 예시 및 설명 = https://m.blog.naver.com/coder1252/220985161855
            : #를 합쳐서 출력
            : sep = ' '
                : 붙히는 사이에 구분자를 넣을 수 있음 (default = '')

        paste0()
            : paste에서 sep = ''으로 넣은것과 동일한 함수


    문자 분리(split)
        strsplit(string,  split = #)
            : # 을 기준으로 string을 분리하여 출력
            
        str_split(string, pattern)
            : pattern(정규표현식) 기준으로 분리 출력
                # library(stringr)
            
    문자열부분출력(string slcing)
        substr(string, startIdx, endIdx)
            : string에서 원하는 부분의 idx 문자열 추출
            ## python과 다르게 endIdx값도 추출됨.
        
            

factor
    factor 설정
        factor(data, levels = c(#원하는 순서#))
            c()로 원하는 순서 설정 가능

vector(백터)
    : 하나의 백터는 동일한 type의 요소를 갖음
        ** 혼합하여 사용시 str로 변경될 확률이 높음 **

    : col명 설정가능
        names(변수명) <- c(col명,col명...)

    생성
        c(#)
            : column형태로 만들어짐(세로로) / console에 출력으론 가로로 나옴
            # 넣고싶은 요소를 , 기준으로 넣을 수 있음
            # int1 : int2  => int1부터 +1씩해서 넣어줌 (int2보다 같거나 작은수까지) , 소수도 가능
            # col명 = 조건 or 요소, col명 = 조건 or 요소  => 백터생성시 column명 설정 가능

        seq(#)
            : 원하는 범위의 숫자를 넣기 위한 기능
            # to = end number
            # from = start number(default = 1)
            # by = 증가하는 크기(default = 1)

        rep(#)
            : 원하는 요소를 반복해서 넣을때 사용
            # 반복할 값, 반복횟수(default = 1)
                ## 반복할값의 요소만큼 반복횟수를 별도로 백터로 주어서 사용가능
                ## times = 00   :: 00 만큼 처음부터 끝까지 반복
                ## each = 00    :: 처음부터 00만큼 출력 후 다음 요소 출력
            
    추가
        vec1 = c(vec1, 추가할요소 or vec)
            : vec1뒤에 요소 or vec를 추가
            
    집합처리
        union(x, y)
            : x, y 합집합

        setdiff(x, y)
            : x - y
            
        intersect(x,y)
            : 교집합

    length(변수명)
        : 변수의 길이 출력
        
    slicing
        vec[c(00,00)]
            : 00, 00번의 index값 출력
                ** vec[00,00]의 경우 martirx로 인식하여 error
                ** 주의 ** -의 경우 해당 index 제외하고 출력함

    요소 찾기(index출력)
        match('찾는요소',vec)
            : vec에서 찾는요소의 첫번째 해당하는 index출력
                # 찾는요소가 여러개인 경우 vec로 표현하여 사용가능

        which(vec == '찾는요소')
            : 찾는요소에 해당하는 index값들을 모두 출력
                # 찾는요소가 여러개인 경우 vec로 표현하여 사용가능
                
matrix, dataframe
    생성
        matrix(data, #)
            : data를 nrow or ncol에 맞춰서 matrix 생성
            #
                nrow = 00 : row갯수 지정
                ncol = 00 : col갯수 지정 (row, col 중 하나만 지정하면 자동 설정
                byrow = FALSE(default) / TRUE
                    : data를 row방향(FALSE)으로 입력할지, col(TRUE)으로 할지 지정
                    
        data.frame(vec1, vec2..)
            : 각 vec를 col으로 하는 dataframe 생성
                ## len이 다를 경우 가장 많은 vec에 맞춰서 반복실행  //  큰값과 특정 vce요소갯수가 서로소일경우 error
            ## col명 설정
                Col명 = vec1, ...
                    : col명 설정 가능

    Slicing
        subset
            subset(matrix, 조건, #)
                # select : 원하는 col만 출력 가능 
                
    transpose
        t(matrix or dataframe)
                
    관련 함수
        colMeans(data)
            : col별 평균값 출력

숫자타입
    complex :  복소수
        Re(Z) 
            : Z의 실수부분 출력
        Im(Z)
            : Z의 허수부분 출력

DATE(시간, 날짜)
    # 공통사항
        요일
            %a : 월,화,수 ...
            %A : 월요일, 화요일 ...
            %u : 1~7 사이값 출력, 1:월요일, 2:화요일 ...
            %w : 0~6 사이값 출력, 0:일요일
        일
            %d : 09, 11, 12 ...
        월
            %b : 1, 2, ...
            %B : 1월, 2월...
        년
            %y : 12,13,14...
            %Y : 2012, 2013 ...
        시간
            %H : (24시간기준) 11, 23, 00...
            %l(소문자L) : (12시간기준) 11, 11, 12..
        
        분
            %M : 23, 45 ...
        
        초
            %S : 06, 11, 15..
        
        오전 / 오후
            %p : AM, PM
        
        세기
            %C : 세기(ex 20세기)    

    Date        
        as.Date(str, format = "#")
                # ex) %Y-%m-%d
            : str을 date형식으로 변경
                #제한) 년,월,일만 사용가능
    Posixct
        as.POSIXct(str, format="#")
                # ex)%Y-%m-%d %H:%M:%S
            : str을 POSIXct로 변경
        
        format(pos, %)
            : %에 해당하는 pos의 값을 출력(%은 공통사항 참조)
            
    Sys.time()
        : 현제 시간 
    
    lubridate package(추가정리필요)

크기출력 (length, dim)
    length(vec1)
        : vector의 요소갯수 출력
    
    dim(matrix)
        : matrix의 크기 출력

요소분포확인
    summary(vec or max)
        : str = int or num ==> 최소값, 1사분기, 중앙값, 평균, 3사분기, 최대값 출력
        : str = factor ==> level 갯수와 요소 출력
        : str = character ==> chr()와 동일하게 출력(요소 출력)
        
무작위 추출
    무작위 고정
        set.seed(00)
            : 00 숫자에 따라 결과값 고정

    sample
        sample(startNum:endNum, 추출할 갯수, #)
            : 범위안에 추출할 갯수 정함
            # replace(복원추출 여부) = FALSE(defualt) / TRUE

조건문
    if
        if(조건){ 참일때 출력 }
        else{거짓일때 출력}
        
    ifelse(조건, 참출력, 거짓출력)
        
함수
    function()
        # 형식
            함수명 = function(받을 변수){ 함수 내용 작성 ## }      
            ## 주의
                return (return할값)

apply
    apply(data, 1 or 2, 적용 함수)
        # 1 = row별 계산, 2 = col별 계산

    tapply(data, groupby기준, 적용 함수)
        : group별 적용함수값 출력
        

데이터 불러오기 (data loading)
    read.csv('파일경로')
        * 파일경로 /는 한개, ||는 두개로 폴더표시
        
    ## 추가정리필요 ##
        fread
            : 대용량 파일 입출력에 장점.
            : 정리가 필요
            
    read_excel('파일경로')
        ## library(readxl) 필요
        
        
연산(교집합, 합집합, 조건처리)
    & : and
    | : or
        ## slicing일때 같은 col의 값은 c()로 사용가능
    !=  : 틀림
        ## col명에 -을 붙혀서 = -col명 으로 사용가능
    
자료분석
    xtabs(#)
        : col별 분포표 생성(count개념)
        #
            data = matrix   ## 미입력시 col입력마다 matrix명$col명 작성해야 함
            sparse = 0부분을 .으로 출력
            
plyr (패키지)
    : excel 피벗테이블과 흡사한 기능
    
    ddply(데이터,집계기준, summarise, 요약 변수)
        # 사용예시 : https://wikidocs.net/73368
        # groupby(python) 흡사

dplyr (패키지)
    %>%
        # 단축키 : ctrl + shift + m
        : 함수의 가독성을 높일 수 있는 방법, 가로안에 들어갈 내용을 먼저 적어주고
            파이프(%>%)를 사용하여 이후에 함수를 기술하여서 작성가능하게 하는 함수

RSADBE
    : R 제공하는 dataset
    
시각화
    ggplot2 (패키지)
        ggplot(data, aes() + 그래프 + 기타옵션)
        * 그래프 생성 순서 : 축생성 -> 그래프 -> 기타옵션(이름 등)
        * 전반적인 예시 : https://wikidocs.net/73370
        
        * 축생성
            ggplot(데이터명,aes(x=변수1,y=변수2)) (x축, y축을 정해준다.)
            
        * 그래프
            geom_bar()
            geom_histogram()
            geom_boxplot()
            geom_line()
           
        * 기타옵션
            labs() : 범례제목 수정
            ggtitle() : 제목 수정
            xlabs(), ylabs() : x, y축 이름 수정

    par(#)
        #
        mfrow = c(1,2)
            : 한화면에 그래프 배치 갯수 , c(1,2) 경우 2개(1행2열)의 그래프 출력
            
정규 표현식(pattern)
    \\d : 숫자(0~9)
    \\D : 숫자가 아닌것
    \\s : 공백
    \\S : 공백이 아닌것
    \\w : 단어
    \\W : 단어가 아닌것
    \\t : tab
    \\n : Enter
    ^ : 시작되는 문자
    $ : 마지막 문자
    \ : 탈출문자
    | : or


fuction(함수)
    함수명 = funtion(내부변수 지정){함수내용 작성}

library
    install
        install.packages('라이브러리명')
    
    import
        library(라이브러리명)
        
    create(생성)
        ## 필요한 library
            'devtools'
            'roxygen2'
        
        ## 생성순서
            1. library 2개 실행
            2. create('library명')
            3. './library명/R' 파일에 넣을 함수들 넣음
            4. setwd('./library명')
            5. document()
            6. setwd('..')
            7. install('library명')
            
